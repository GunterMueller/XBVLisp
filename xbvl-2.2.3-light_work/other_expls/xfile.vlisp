;
; recuperation du nom d'un fichier a partir d'un repertoire
;
(de xGetFileName (dir exec-on-ok)
    (setq xGetFileNameClbk exec-on-ok)
    (let (root (xCreateWidget '--AS-- "ApplicationShell" "title" "File" "iconName" "File"))
      (let (bx (xCreateWidget '--BX-- "awForm" root "height" 300))
	(let ((dia (xCreateWidget '--DB-- "awDialog" bx "label" "File Name" "value" (if dir dir "./")))
	      (vp  (xCreateWidget '--VP-- "awViewport" bx "allowHoriz" "True" "allowVert" "True"
				  "vertDistance" 90 "width" 600 "height" 200)))
	  (let ((lst (xCreateWidget '--LST-- "awList" vp "list" (ls dir) "columnSpacing" 1))
		(cmd-ok (xCreateWidget '--CW-- "awCommand" dia "label" "OK"))
		(cmd-dir (xCreateWidget '--CW-- "awCommand" dia "label" "Open Directory"))
		(cmd-cl (xCreateWidget '--CW-- "awCommand" dia "label" "Cancel")))
	    (ifn dir (put dia 'set "./")
		 (put dia 'set dir))
	    (xAddCallback lst "callback"     (strcat "(xGetFileNameClbk 'up '" bx " \"$O\")"))
	    (xAddCallback cmd-ok "callback"  (strcat "(xGetFileNameClbk 'ok '" bx ")"))
	    (xAddCallback cmd-dir "callback" (strcat "(xGetFileNameClbk 'dir '" bx ")"))
	    (xAddCallback cmd-cl "callback"  (strcat "(xGetFileNameClbk 'cl '" bx ")")))))
      (xRealize root)))

(de xGetFileNameClbk (cmd bx obj)
    (let ((dia (car (xGetValues bx "children")))
	  (vp  (cadr (xGetValues bx "children"))))
      (let (f-name (xGetValues dia "value"))
	(cond
	 ((eq cmd 'cl) (xRemove bx))
	 ((eq cmd 'ok) (xRemove bx)        (eval `(,xGetFileNameClbk ,f-name)))
	 ((eq cmd 'up) (put dia 'file obj) (xSetValues dia "value" (strcat (get dia 'set) obj)))
	 ((eq cmd 'dir) 
	  (let (new-dir (ls f-name))
	    (ifn new-dir nil
		 (put dia 'set (strcat (get dia 'set) (get dia 'file)))
		 (xSetValues dia "value" (get dia 'set))
		 (xRemoveWidget vp)
		 (let (lst (xCreateWidget '--LST-- "awList" 
					  (xCreateWidget '--VP-- "awViewport" bx "allowHoriz" "True" 
							 "vertDistance" 90 "allowVert" "True" "width" 600 "height" 200)
					  "list" new-dir "columnSpacing" 1))
		   (xAddCallback lst "callback"     (strcat "(xGetFileNameClbk 'up '" bx " \"$O\")"))))))))))
	      
	  
(de xInclude () (xGetFileName () 'include))
